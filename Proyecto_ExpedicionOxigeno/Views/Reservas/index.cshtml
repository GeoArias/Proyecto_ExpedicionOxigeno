@model IEnumerable<Microsoft.Graph.Models.BookingAppointment>

@{
    ViewBag.Title = "Nueva reserva";
}

<div class="reservation-container">
    <div class="page-header text-center mb-5 animate__animated animate__fadeIn">
        <h1 class="display-4">@ViewBag.Title</h1>
        <p class="lead">¡Estamos emocionados de recibirte pronto!</p>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger animate__animated animate__shakeX">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center animate__animated animate__bounceIn">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
        </div>
    }

    @if (ViewBag.Services != null)
    {
        <form action="@Url.Action("SeleccionarServicio", "Reservas")" method="get">
            <!-- Datepicker flotante -->
            <div class="date-picker-floating animate__animated animate__fadeInDown">
                <div class="date-picker-header">
                    <i class="fas fa-calendar-alt calendar-icon"></i>
                    <h4>Selecciona una fecha</h4>
                </div>
                <div class="date-picker-body text-center">
                    <div class="date-picker-container">
                        <input type="date" id="fecha" name="fecha" class="form-control form-control-lg mx-auto"
                               min="@DateTime.Today.ToString("yyyy-MM-dd")"
                               max="@DateTime.Today.AddMonths(3).ToString("yyyy-MM-dd")"
                               value="@DateTime.Today.ToString("yyyy-MM-dd")" required />
                    </div>
                    <p class="date-picker-hint">Puedes reservar hasta 3 meses en adelante</p>
                </div>
            </div>

            <!-- Título de servicios -->
            <div class="text-center my-5 animate__animated animate__fadeIn">
                <div class="section-badge">NUESTRAS EXPERIENCIAS</div>
                <h2 class="section-title">Elige tu Aventura</h2>
                <p class="section-text">Selecciona la actividad que deseas reservar</p>
            </div>

            <!-- Servicios en cards -->
            <div class="services-container">
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    @foreach (var service in ViewBag.Services)
                    {
                        string iconClass = "fas fa-tree";

                        if (service.DisplayName.Contains("Escalada"))
                        {
                            iconClass = "fas fa-mountain";
                        }
                        else if (service.DisplayName.Contains("Cuerdas"))
                        {
                            iconClass = "fas fa-route";
                        }
                        else if (service.DisplayName.Contains("Glider"))
                        {
                            iconClass = "fas fa-wind";
                        }

                        <div class="col animate__animated animate__fadeIn">
                            <input class="form-check-input visually-hidden" type="radio" name="id"
                                   id="service-@service.Id" value="@service.Id" required>
                            <label class="service-card h-100" for="service-@service.Id">
                                <div class="service-check-indicator">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <div class="service-icon">
                                    <i class="@iconClass"></i>
                                </div>
                                <h4 class="service-title">@service.DisplayName</h4>
                                <p class="service-description">@service.Description</p>
                                <div class="service-meta">
                                    <div class="service-duration">
                                        <i class="far fa-clock"></i>
                                        @if (service.DefaultDuration.TotalHours >= 1)
                                        {
                                            @($"{Math.Floor(service.DefaultDuration.TotalHours)}h {service.DefaultDuration.Minutes}m")
                                        }
                                        else
                                        {
                                            @($"{service.DefaultDuration.Minutes}m")
                                        }
                                    </div>
                                    <div class="service-price">
                                        <i class="fas fa-tag"></i>
                                        ₡@string.Format("{0:N0}", service.DefaultPrice)
                                    </div>
                                </div>
                                <div class="btn-select-service">
                                    <i class="fas fa-check-circle me-2"></i>Seleccionar
                                </div>
                            </label>
                        </div>
                    }
                </div>
            </div>

            <div class="submit-container text-center my-5">
                <button type="submit" class="btn btn-Primary-ExpOxi btn-lg px-5 py-3 animate__animated animate__pulse animate__infinite animate__slow ">
                    <i class="fas fa-search me-2"></i>Ver horarios disponibles
                </button>
            </div>
        </form>
    }
    else
    {
        <div class="alert alert-info text-center p-4">
            <i class="fas fa-info-circle fa-2x mb-3"></i>
            <h5>No hay servicios disponibles</h5>
            <p>Por favor intenta más tarde o contáctanos directamente.</p>
        </div>
    }
</div>

<style>
    @@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css');
    @@import url('https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css');

    /* General styling */
    body {
        background-color: #f8f9fa;
    }

    .reservation-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    /* Section styling */
    .section-badge {
        display: inline-block;
        background-color: rgba(250, 143, 35, 0.1);
        color: #fa8f23;
        font-weight: 700;
        font-size: 0.8rem;
        padding: 8px 16px;
        border-radius: 50px;
        margin-bottom: 16px;
        letter-spacing: 1px;
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 20px;
        color: #212529;
    }

    .section-text {
        font-size: 1.1rem;
        color: #6c757d;
        max-width: 800px;
        margin: 0 auto;
    }

    /* Floating date picker styling */
    .date-picker-floating {
        background: white;
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        margin: 0 auto 2rem;
        max-width: 500px;
        overflow: hidden;
        position: relative;
    }

    .date-picker-header {
        background: linear-gradient(135deg, #d97d1f 0%, #fa8f23 100%);
        color: white;
        padding: 1.5rem;
        text-align: center;
        position: relative;
    }

    .calendar-icon {
        font-size: 2rem;
        margin-bottom: 0.5rem;
    }

    .date-picker-body {
        padding: 2rem;
    }

    .date-picker-hint {
        color: #6c757d;
        font-size: 0.9rem;
        text-align: center;
        margin-top: 1rem;
    }

    input[type="date"] {
        font-size: 1.2rem;
        padding: 0.75rem;
        text-align: center;
        border-radius: 8px;
        border: 2px solid #e9ecef;
    }

    /* Services styling */
    .services-container {
        margin-bottom: 3rem;
    }

    .service-card {
        background-color: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
        padding: 30px;
        text-align: center;
        position: relative;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
        cursor: pointer;
        border: 3px solid transparent;
    }

        .service-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

    .service-check-indicator {
        position: absolute;
        top: 15px;
        right: 15px;
        color: #fa8f23;
        font-size: 1.5rem;
        opacity: 0;
        transition: all 0.3s ease;
    }

    .service-icon {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #fa8f23 0%, #ff7e00 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 2rem;
        margin: 0 auto 20px;
    }

    .service-title {
        font-weight: 600;
        margin-bottom: 15px;
        font-size: 1.3rem;
        color: #212529;
    }

    .service-description {
        color: #6c757d;
        margin-bottom: 20px;
        flex-grow: 1;
    }

    .service-meta {
        display: flex;
        justify-content: space-between;
        padding-top: 15px;
        margin-top: auto;
        border-top: 1px solid #e9ecef;
        margin-bottom: 20px;
    }

    .service-duration, .service-price {
        display: flex;
        align-items: center;
        font-weight: 500;
        color: #495057;
    }

        .service-duration i, .service-price i {
            margin-right: 5px;
            color: #fa8f23;
        }

    .btn-select-service {
        display: inline-block;
        background-color: #e9ecef;
        color: #495057;
        padding: 10px 20px;
        border-radius: 50px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    input[type="radio"]:checked + .service-card {
        border-color: #fa8f23;
        background-color: white;
    }

        input[type="radio"]:checked + .service-card .service-check-indicator {
            opacity: 1;
        }

        input[type="radio"]:checked + .service-card .btn-select-service {
            background-color: #fa8f23;
            color: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    /* Submit button styling */
    .submit-container {
        margin-top: 3rem;
    }

    .btn-Primary-ExpOxi {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .btn-Primary-ExpOxi:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

    /* Animations */
    .animate__animated {
        animation-duration: 0.8s;
    }

    .animate__fadeIn {
        animation-duration: 1s;
    }
</style>

@section scripts {
    <script>
        $(document).ready(function () {
            // Agregar retraso a las tarjetas de servicio para crear efecto escalonado
            $(".services-container .col").each(function (index) {
                $(this).css("animation-delay", (index * 0.1) + "s");
            });

            // Cambiar el estado visual de la tarjeta seleccionada
            $(".service-card").click(function () {
                // Mostrar el botón de envío cuando se selecciona una tarjeta
                $(".submit-container").addClass("animate__animated animate__fadeInUp");

                // Cambiar texto de todos los botones a "Seleccionar"
                $(".btn-select-service").html('<i class="fas fa-check-circle me-2"></i>Seleccionar');
                // Cambiar texto solo del seleccionado a "Seleccionado"
                $(this).find(".btn-select-service").html('<i class="fas fa-check-circle me-2"></i>Seleccionado');

                // Scroll suave al botón de envío si está fuera de la vista
                if (!isElementInViewport($(".submit-container")[0])) {
                    $('html, body').animate({
                        scrollTop: $(".submit-container").offset().top - 100
                    }, 500);
                }
            });

            // Función para verificar si un elemento está visible en la ventana
            function isElementInViewport(el) {
                var rect = el.getBoundingClientRect();
                return (
                    rect.top >= 0 &&
                    rect.left >= 0 &&
                    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                    rect.right <= (window.innerWidth || document.documentElement.clientWidth)
                );
            }
        });
    </script>
}